.u-position-relative {
  position: relative;
}

.u-center-block {
  margin: 0 auto;
}

.u-img-responsive {
  display: block;
  max-width: 100%;
  height: auto;
}

// Display classes
$display: none, block, inline-block, flex, inline-flex;

@each $val in $display {
  .u-display-#{$val} {
    display: $val;
  }
}

@include respondTo(sm) {
  @each $val in $display {
    .u-sm-display-#{$val} {
      display: $val;
    }
  }
}

@include respondTo(xs) {
  @each $val in $display {
    .u-xs-display-#{$val} {
      display: $val;
    }
  }
}

.u-flex-column {
  flex-direction: column;
}

.u-sm-flex-column {
  @include respondTo(sm) {
    flex-direction: column;
  }
}

.u-xs-flex-column {
  @include respondTo(xs) {
    flex-direction: column;
  }
}

.u-flex-wrap {
  flex-wrap: wrap;
}

.u-flex-nowrap {
  flex-wrap: nowrap;
}

.u-flex-grow-1 {
  flex-grow: 1;
}

// Justify content classes
$justify-content: flex-start, flex-end, center, space-between, space-around;

@each $val in $justify-content {
  .u-justify-#{$val} {
    justify-content: $val;
  }
}

@include respondTo(sm) {
  @each $val in $justify-content {
    .u-sm-justify-#{$val} {
      justify-content: $val;
    }
  }
}

@include respondTo(xs) {
  @each $val in $justify-content {
    .u-xs-justify-#{$val} {
      justify-content: $val;
    }
  }
}

// Align items classes
$align-items: flex-start, flex-end, center, stretch;

@each $val in $align-items {
  .u-align-items-#{$val} {
    align-items: $val;
  }
}

@include respondTo(sm) {
  @each $val in $align-items {
    .u-sm-align-items-#{$val} {
      align-items: $val;
    }
  }
}

@include respondTo(xs) {
  @each $val in $align-items {
    .u-xs-align-items-#{$val} {
      align-items: $val;
    }
  }
}

// Order classes
$order: 1, 2, 3, 4, 5;

@each $val in $order {
  .u-order-#{$val} {
    order: $val;
  }
}

@include respondTo(sm) {
  @each $val in $order {
    .u-sm-order-#{$val} {
      order: $val;
    }
  }
}

@include respondTo(xs) {
  @each $val in $order {
    .u-xs-order-#{$val} {
      order: $val;
    }
  }
}

// Height classes
.u-height-100p {
  height: 100%;
}

.u-sm-height-100p {
  @include respondTo(sm) {
    height: 100%;
  }
}

.u-xs-height-100p {
  @include respondTo(xs) {
    height: 100%;
  }
}

// Width classes
.u-width-100p {
  width: 100%;
}

.u-sm-width-100p {
  @include respondTo(sm) {
    width: 100%;
  }
}

.u-xs-width-100p {
  @include respondTo(xs) {
    width: 100%;
  }
}

.u-sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  border: 0;
}

.u-overflow-hidden {
  overflow: hidden;
}

.u-z-index-1 {
  z-index: 1;
}

// Text align classes
$text-align: left, right, center;

@each $val in $text-align {
  .u-ta-#{$val} {
    text-align: $val;
  }
}

@include respondTo(sm) {
  @each $val in $text-align {
    .u-sm-ta-#{$val} {
      text-align: $val;
    }
  }
}

@include respondTo(xs) {
  @each $val in $text-align {
    .u-xs-ta-#{$val} {
      text-align: $val;
    }
  }
}

.u-text-uppercase {
  text-transform: uppercase;
}

.u-font-semibold {
  font-weight: $semibold;
}

// Line height classes
.u-lh-1_25 {
  line-height: 1.25rem;
}

.u-lh-1_5 {
  line-height: 1.5rem;
}

.u-lh-1_75 {
  line-height: 1.75rem;
}

.u-fs-0 {
  font-size: 0;
}

.u-no-wrap {
  white-space: nowrap;
}

// Border classes
.u-border {
  border: 1px solid $colorGrey;
}

.u-border-top {
  border-top: 1px solid $colorGrey;
}

.u-border-bottom {
  border-bottom: 1px solid $colorGrey;
}

.u-border-radius-4 {
  border-radius: 0.25rem;
}

.u-no-border {
  border: none;
}
